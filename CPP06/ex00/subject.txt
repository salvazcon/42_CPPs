Escribe una clase ScalarConverter que contendrá un único método estático "convert"
que tomará como parámetro una representación de cadena de un literal C++ en su forma más común
y mostrará su valor en la siguiente serie de tipos escalares :

    - char
    - int
    - float
    - double

Como esta clase no necesita almacenar nada, no debe ser instanciable por los usuarios.

Excepto para los parámetros char, sólo se utilizará la notación decimal.

    Ejemplos de char: 'c', 'a', ...

Para simplificar las cosas, tenga en cuenta que los caracteres no visualizables no deben utilizarse 
como entradas. Si una conversión a char no es visualizable, imprime un mensaje informativo.

    Ejemplos de int: 0, -42, 42...
    Ejemplos de float: 0.0f, -4.2f, 4.2f...

También tienes que manejar estos pseudo literales (ya sabes, para la ciencia): -inff, +inff y nanf.

    Ejemplos de dobles: 0.0, -4.2, 4.2...

También tienes que manejar estos pseudo literales (ya sabes, por diversión): -inf, +inf y nan.

Escribe un programa para probar que tu clase funciona como se espera.

Primero tienes que detectar el tipo del literal pasado como parámetro, convertirlo de
string a su tipo real, luego convertirlo explícitamente a los otros tres tipos de datos. Por último
muestra los resultados como se muestra a continuación.

Si una conversión no tiene sentido o se desborda, muestre un mensaje para informar al usuario de que la conversión de tipo es imposible.
al usuario de que la conversión es imposible. Incluya cualquier encabezado que necesite para
manejar límites numéricos y valores especiales

    ./convert 0
    char: Non displayable
    int: 0
    float: 0.0f
    double: 0.0
    ./convert nan
    char: impossible
    int: impossible
    float: nanf
    double: nan
    ./convert 42.0f
    char: '*'
    int: 42
    float: 42.0f
    double: 42.0